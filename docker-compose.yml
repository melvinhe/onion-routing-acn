services:
  op:
    container_name: op_container
    build:
      context: .
      dockerfile: op.Dockerfile
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    networks:
      tor:
        ipv4_address: 10.1.1.0
    entrypoint: 
      - ./onion-proxy
  or1:
    container_name: or1_container
    build:
      context: .
      dockerfile: or.Dockerfile
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    networks:
      tor:
        ipv4_address: 10.1.1.1
    entrypoint: 
      - ./onion-router
      - 10.1.1.1:9090
  or2:
    container_name: or2_container
    build:
      context: .
      dockerfile: or.Dockerfile
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    networks:
      tor:
        ipv4_address: 10.1.1.2
    entrypoint: 
      - ./onion-router
      - 10.1.1.2:9090
  or3:
    container_name: or3_container
    build:
      context: .
      dockerfile: or.Dockerfile
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    networks:
      tor:
        ipv4_address: 10.1.1.3
    entrypoint: 
      - ./onion-router
      - 10.1.1.3:9090
  or4:
    container_name: or4_container
    build:
      context: .
      dockerfile: or.Dockerfile
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    networks:
      tor:
        ipv4_address: 10.1.1.4
    entrypoint: 
      - ./onion-router
      - 10.1.1.4:9090
  or5:
    container_name: or5_container
    build:
      context: .
      dockerfile: or.Dockerfile
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    networks:
      tor:
        ipv4_address: 10.1.1.5
    entrypoint: 
      - ./onion-router
      - 10.1.1.5:9090

networks:
  tor:
    driver: bridge
    ipam:
      config:
        - subnet: 10.1.0.0/16
          gateway: 10.1.0.1